/**
 * 原则：不推荐使用any！这会让typescript变为”AnyScript“（使用ts类型保护的优势）
 * 因为当值的类型为any时，可以对值进行任意操作，并且不会有代码提示。
 */

let zqd:any = {name:'z'}
obj.age = 100
zqd()
const num:number = zqd

/**
 * 解释：以上操作都不会有任何类型错误提示，即使可能存在错误！
 * 尽可能的避免使用any类型，除非临时使用any来“避免”书写很长、很复杂的类型！
 * 其他隐式具有any类型的情况：1.声明变量不提供类型也不提供默认值 2.函数参数不加类型。
 * 注意：因为不推荐使用any，所以，这两种情况下也要提供类型！
 */
//声明变量，不提供类型，也不提供默认值
let abc;
abc.aaa
abc.bbb = 100

// 函数参数不加类型
function add(num1,num2){}
add(1,'2')